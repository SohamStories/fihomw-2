// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified  DateTime?
  password       String?
  image         String?
  accounts      Account[]
  accountype    AccountType[]
  categories    Categories[]
  transactions  Transaction[]
  @@map("users")
}
 

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model AccountType {
  id                 String @id @default(cuid())
  userId             String  @map("user_id")
  name               String
  
  transactions  Transaction[]
  user User @relation(fields: [userId], references: [id], onDelete: Cascade )
   @@map("accountypes")
}
 

 model Categories {
  id               String @id @default( cuid())
  userId           String @map("user_id")
  name             String
  transactions  Transaction[]
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("categories")
 }

model Transaction {
  id          String   @id @default(cuid())
  userId      String   @map("user_id")
  accountypeId   String   @map("accountype_id")
  categoryId  String?  @map("category_id")
  amount      Int      // Changed from Decimal to Int
  payee       String
  description String?
  date        DateTime @default(now())

  // Relationships
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accountypes   AccountType   @relation(fields: [accountypeId], references: [id], onDelete: Cascade)
  categories     Categories? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@map("transactions")
}
